{"ast":null,"code":"var _jsxFileName = \"/Users/lisasapi/Desktop/rick-and-morty/frontend/src/components/Characters/CharacterList/CharacterList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport RickandMorty from \"../../../images/rick-and-morty.png\";\nimport { addToFavorite, fetchCharacters, fetchFavorites, removeFromFavorite } from \"../../../utils/api\";\nimport { getToken } from \"../../../utils/userSession\";\nimport ErrorMessage from \"../../ErrorMessage/ErrorMessage\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport CharacterTile from \"../CharacterTile/CharacterTile\";\nimport \"./characterlist.scss\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CharacterList = () => {\n  _s();\n  const [characters, setCharacters] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(initialPage);\n  const [totalPages, setTotalPages] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const token = getToken();\n  useEffect(() => {\n    setSearchParams({\n      page: pageNumber\n    });\n  }, [pageNumber, setSearchParams]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!token) {\n          navigate(\"/login\");\n        }\n        setLoading(true);\n        const dataCharacters = await fetchCharacters(pageNumber);\n        const dataFavorites = await fetchFavorites();\n        setCharacters(dataCharacters.characters);\n        setTotalPages(dataCharacters.info.pages);\n        setFavorites(dataFavorites.favorites);\n        if (dataCharacters.source === \"cache\" || dataFavorites.source === \"cache\") {\n          setErrorMessage(\"Live data unavailable. Showing cached results.\");\n        }\n      } catch (error) {\n        console.log(\"There has been an error\", error);\n        setErrorMessage(\"Something went wrong while loading characters. Please try again.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [pageNumber, token]);\n  const handleFavorites = async id => {\n    try {\n      if (favorites.includes[id]) {\n        await removeFromFavorite(id);\n        setFavorites(prev.filter(favId => favId !== id));\n      } else {\n        await addToFavorite(id);\n        setFavorites(prev => prev.includes(id) ? prev : [...prev, id]);\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle favorite\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"imageHeader\",\n      alt: \"rick and morty wiki\",\n      src: RickandMorty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"logoutButton\",\n      onClick: () => {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 24\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading characters...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: characters === null || characters === void 0 ? void 0 : characters.map((character, index) => /*#__PURE__*/_jsxDEV(CharacterTile, {\n          character: character,\n          isFavorite: favorites.includes(character.id),\n          handleFavorites: () => handleFavorites(character.id)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), characters !== null && characters !== void 0 && characters.length ? /*#__PURE__*/_jsxDEV(Pagination, {\n        pageNumber: pageNumber,\n        totalPages: totalPages,\n        setPageNumber: setPageNumber\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterList, \"Fr4FnujKkaTqVqY1fT4hCva6LlA=\", false, function () {\n  return [useSearchParams, useNavigate];\n});\n_c = CharacterList;\nexport default CharacterList;\nvar _c;\n$RefreshReg$(_c, \"CharacterList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useSearchParams","RickandMorty","addToFavorite","fetchCharacters","fetchFavorites","removeFromFavorite","getToken","ErrorMessage","Pagination","CharacterTile","jsxDEV","_jsxDEV","Fragment","_Fragment","CharacterList","_s","characters","setCharacters","favorites","setFavorites","searchParams","setSearchParams","initialPage","parseInt","get","loading","setLoading","pageNumber","setPageNumber","totalPages","setTotalPages","errorMessage","setErrorMessage","navigate","token","page","fetchData","dataCharacters","dataFavorites","info","pages","source","error","console","log","handleFavorites","id","includes","prev","filter","favId","className","children","alt","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","localStorage","removeItem","map","character","index","isFavorite","length","_c","$RefreshReg$"],"sources":["/Users/lisasapi/Desktop/rick-and-morty/frontend/src/components/Characters/CharacterList/CharacterList.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport RickandMorty from \"../../../images/rick-and-morty.png\";\nimport {\n  addToFavorite,\n  fetchCharacters,\n  fetchFavorites,\n  removeFromFavorite,\n} from \"../../../utils/api\";\nimport { getToken } from \"../../../utils/userSession\";\nimport ErrorMessage from \"../../ErrorMessage/ErrorMessage\";\nimport Pagination from \"../../Pagination/Pagination\";\nimport CharacterTile from \"../CharacterTile/CharacterTile\";\nimport \"./characterlist.scss\";\n\nconst CharacterList = () => {\n  const [characters, setCharacters] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n\n  const [loading, setLoading] = useState(false);\n  const [pageNumber, setPageNumber] = useState(initialPage);\n  const [totalPages, setTotalPages] = useState(0);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n  const token = getToken();\n\n  useEffect(() => {\n    setSearchParams({ page: pageNumber });\n  }, [pageNumber, setSearchParams]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        if (!token) {\n          navigate(\"/login\");\n        }\n        setLoading(true);\n        const dataCharacters = await fetchCharacters(pageNumber);\n        const dataFavorites = await fetchFavorites();\n        setCharacters(dataCharacters.characters);\n        setTotalPages(dataCharacters.info.pages);\n        setFavorites(dataFavorites.favorites);\n        if (\n          dataCharacters.source === \"cache\" ||\n          dataFavorites.source === \"cache\"\n        ) {\n          setErrorMessage(\"Live data unavailable. Showing cached results.\");\n        }\n      } catch (error) {\n        console.log(\"There has been an error\", error);\n        setErrorMessage(\n          \"Something went wrong while loading characters. Please try again.\"\n        );\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [pageNumber, token]);\n\n  const handleFavorites = async (id) => {\n    try {\n      if (favorites.includes[id]) {\n        await removeFromFavorite(id);\n        setFavorites(prev.filter((favId) => favId !== id));\n      } else {\n        await addToFavorite(id);\n        setFavorites((prev) => (prev.includes(id) ? prev : [...prev, id]));\n      }\n    } catch (error) {\n      console.error(\"Failed to toggle favorite\", error);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <img\n        className=\"imageHeader\"\n        alt=\"rick and morty wiki\"\n        src={RickandMorty}\n      />\n      <button\n        className=\"logoutButton\"\n        onClick={() => {\n          localStorage.removeItem(\"token\");\n          navigate(\"/login\");\n        }}\n      >\n        Logout\n      </button>\n      {errorMessage && <ErrorMessage error={errorMessage} />}\n      {loading ? (\n        <p className=\"loading\">Loading characters...</p>\n      ) : (\n        <>\n          <div className=\"list\">\n            {characters?.map((character, index) => (\n              <CharacterTile\n                character={character}\n                key={index}\n                isFavorite={favorites.includes(character.id)}\n                handleFavorites={() => handleFavorites(character.id)}\n              />\n            ))}\n          </div>\n          {characters?.length ? (\n            <Pagination\n              pageNumber={pageNumber}\n              totalPages={totalPages}\n              setPageNumber={setPageNumber}\n            />\n          ) : null}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CharacterList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}