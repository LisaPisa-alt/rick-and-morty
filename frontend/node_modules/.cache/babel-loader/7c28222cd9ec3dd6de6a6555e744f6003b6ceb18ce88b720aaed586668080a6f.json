{"ast":null,"code":"import { getToken } from \"./userSession\";\nconst baseURL = process.env.REACT_APP_SERVER_URL;\nexport const fetchCharacters = async () => {\n  try {\n    const token = getToken();\n    const characterResponse = await fetch(apiURL, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const dataCharacters = await characterResponse.json();\n    if (dataCharacters.source === \"cache\") {\n      setErrorMessage(\"Live data unavailable. Showing cached results.\");\n    }\n  } catch (error) {\n    console.log(\"There has been an error\", error);\n    setErrorMessage(\"Something went wrong while loading characters. Please try again.\");\n  }\n};\nexport const fetchFavorites = async () => {\n  try {\n    const token = getToken();\n    const favoritesResponse = await fetch(`${baseURL}/favorites`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const dataCharacters = await characterResponse.json();\n    const dataFavorites = await favoritesResponse.json();\n    if (dataCharacters.source === \"cache\") {\n      setErrorMessage(\"Live data unavailable. Showing cached results.\");\n    }\n  } catch (error) {\n    console.log(\"There has been an error\", error);\n    setErrorMessage(\"Something went wrong while loading characters. Please try again.\");\n  }\n};","map":{"version":3,"names":["getToken","baseURL","process","env","REACT_APP_SERVER_URL","fetchCharacters","token","characterResponse","fetch","apiURL","headers","Authorization","dataCharacters","json","source","setErrorMessage","error","console","log","fetchFavorites","favoritesResponse","dataFavorites"],"sources":["/Users/lisasapi/Desktop/rick-and-morty/frontend/src/utils/api.js"],"sourcesContent":["import { getToken } from \"./userSession\";\n\nconst baseURL = process.env.REACT_APP_SERVER_URL;\n\nexport const fetchCharacters = async () => {\n  try {\n    const token = getToken();\n    const characterResponse = await fetch(apiURL, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n\n    const dataCharacters = await characterResponse.json();\n\n    if (dataCharacters.source === \"cache\") {\n      setErrorMessage(\"Live data unavailable. Showing cached results.\");\n    }\n  } catch (error) {\n    console.log(\"There has been an error\", error);\n    setErrorMessage(\n      \"Something went wrong while loading characters. Please try again.\"\n    );\n  }\n};\n\nexport const fetchFavorites = async () => {\n  try {\n    const token = getToken();\n    const favoritesResponse = await fetch(`${baseURL}/favorites`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    const dataCharacters = await characterResponse.json();\n    const dataFavorites = await favoritesResponse.json();\n\n    if (dataCharacters.source === \"cache\") {\n      setErrorMessage(\"Live data unavailable. Showing cached results.\");\n    }\n  } catch (error) {\n    console.log(\"There has been an error\", error);\n    setErrorMessage(\n      \"Something went wrong while loading characters. Please try again.\"\n    );\n  }\n};\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AAExC,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAEhD,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,IAAI;IACF,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMO,iBAAiB,GAAG,MAAMC,KAAK,CAACC,MAAM,EAAE;MAC5CC,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC,CAAC;IAEF,MAAMM,cAAc,GAAG,MAAML,iBAAiB,CAACM,IAAI,CAAC,CAAC;IAErD,IAAID,cAAc,CAACE,MAAM,KAAK,OAAO,EAAE;MACrCC,eAAe,CAAC,gDAAgD,CAAC;IACnE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;IAC7CD,eAAe,CACb,kEACF,CAAC;EACH;AACF,CAAC;AAED,OAAO,MAAMI,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMb,KAAK,GAAGN,QAAQ,CAAC,CAAC;IACxB,MAAMoB,iBAAiB,GAAG,MAAMZ,KAAK,CAAC,GAAGP,OAAO,YAAY,EAAE;MAC5DS,OAAO,EAAE;QACPC,aAAa,EAAE,UAAUL,KAAK;MAChC;IACF,CAAC,CAAC;IACF,MAAMM,cAAc,GAAG,MAAML,iBAAiB,CAACM,IAAI,CAAC,CAAC;IACrD,MAAMQ,aAAa,GAAG,MAAMD,iBAAiB,CAACP,IAAI,CAAC,CAAC;IAEpD,IAAID,cAAc,CAACE,MAAM,KAAK,OAAO,EAAE;MACrCC,eAAe,CAAC,gDAAgD,CAAC;IACnE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAAC;IAC7CD,eAAe,CACb,kEACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}